class Solution {
    public boolean validateBinaryTreeNodes(int n, int[] lc, int[] rc) {
        int[] a=new int[n];
        int r=-1;
        for(int i=0;i<n;i++)
        {
            if(lc[i]!=-1) a[lc[i]]++;
            if(rc[i]!=-1) a[rc[i]]++;
            
        }
        for(int i=0;i<n;i++)
        {
            if(a[i]==0)
            {
                if(r==-1)r=i;
                else return false;
            }
        }
        if(r==-1) return false;
        boolean[] v=new boolean[n];
        Queue<Integer> q=new LinkedList<>();
        q.offer(r);
        while(!q.isEmpty())
        {
            int b=q.poll();
            if(v[b]) return false;
            v[b]=true;
            if(lc[b]!=-1) q.offer(lc[b]);
            if(rc[b]!=-1) q.offer(rc[b]);
        }
        int tc=0;
        for(boolean c:v)
        {
            if(c) tc++;
        }
        return tc==n;
            
    }
}
